{"ast":null,"code":"var _jsxFileName = \"/home/user/codenation/react-17/src/routes/DashboardRoute.jsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, useRouteMatch } from 'react-router-dom';\nimport { getCategoriesFailed, getCategoriesRequest, getCategoriesSuccess, getUserFailed, getUserRequest, getUserSuccess, logout } from '../actions';\nimport { endpoints } from '../modules/endpoints';\nimport { request } from '../modules/request';\nimport { WelcomeBox } from '../components';\nimport { Categories, Dashboard, PrivateRoute, Topbar } from '../containers'; //const { getCategories, getUserProfile,  } = endpoints;\n\nconst DashboardRoute = () => {\n  const {\n    auth,\n    content,\n    user\n  } = useSelector(state => state);\n  const {\n    path,\n    url\n  } = useRouteMatch();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    /*const requestOptions = {\n      ...getUserProfile.options,\n      headers: { 'Authorization': `Bearer ${auth.accessToken}` }\n    }\n     dispatch(getUserRequest());\n     request(getUserProfile.url, requestOptions)\n      .then(data => dispatch(getUserSuccess(data)))\n      .catch(error => {\n        if (error === 401) {\n          dispatch(logout());\n           return;\n        }\n         dispatch(getUserFailed(error));\n      });*/\n  }, [auth, dispatch]);\n  useEffect(() => {\n    /* const requestOptions = {\n       ...getCategories.options,\n       headers: { 'Authorization': `Bearer ${auth.accessToken}` }\n     }\n      dispatch(getCategoriesRequest());\n      request(getCategories.url, requestOptions)\n       .then(data => dispatch(getCategoriesSuccess(data)))\n       .catch(error => {\n         if (error === 401) {\n           dispatch(logout());\n            return;\n         }\n          dispatch(getCategoriesFailed(error))\n       });\n    */\n  }, [auth, dispatch]);\n  return /*#__PURE__*/React.createElement(Dashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Topbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default DashboardRoute;","map":{"version":3,"sources":["/home/user/codenation/react-17/src/routes/DashboardRoute.jsx"],"names":["React","useEffect","useDispatch","useSelector","Switch","useRouteMatch","getCategoriesFailed","getCategoriesRequest","getCategoriesSuccess","getUserFailed","getUserRequest","getUserSuccess","logout","endpoints","request","WelcomeBox","Categories","Dashboard","PrivateRoute","Topbar","DashboardRoute","auth","content","user","state","path","url","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,kBAAtC;AAEA,SACEC,mBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,MAPF,QAQO,YARP;AAUA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SACEC,UADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,MAJF,QAKO,eALP,C,CAQA;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA0BpB,WAAW,CAACqB,KAAK,IAAIA,KAAV,CAA3C;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAgBrB,aAAa,EAAnC;AACA,QAAMsB,QAAQ,GAAGzB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;;;;;;;;;;;;;;AAmBD,GApBQ,EAoBN,CAACoB,IAAD,EAAOM,QAAP,CApBM,CAAT;AAsBA1B,EAAAA,SAAS,CAAC,MAAM;AACf;;;;;;;;;;;;;;;AAmBA,GApBQ,EAoBN,CAACoB,IAAD,EAAOM,QAAP,CApBM,CAAT;AAsBA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AASD,CA1DD;;AA4DA,eAAeP,cAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, useRouteMatch,} from 'react-router-dom';\n\nimport {\n  getCategoriesFailed,\n  getCategoriesRequest,\n  getCategoriesSuccess,\n  getUserFailed,\n  getUserRequest,\n  getUserSuccess,\n  logout,\n} from '../actions';\n\nimport { endpoints } from '../modules/endpoints';\nimport { request } from '../modules/request';\nimport { WelcomeBox } from '../components';\nimport {\n  Categories,\n  Dashboard,\n  PrivateRoute,\n  Topbar,\n} from '../containers';\n\n\n//const { getCategories, getUserProfile,  } = endpoints;\n\nconst DashboardRoute = () => {\n  const { auth, content, user } = useSelector(state => state);\n  const { path, url } = useRouteMatch();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    /*const requestOptions = {\n      ...getUserProfile.options,\n      headers: { 'Authorization': `Bearer ${auth.accessToken}` }\n    }\n\n    dispatch(getUserRequest());\n\n    request(getUserProfile.url, requestOptions)\n      .then(data => dispatch(getUserSuccess(data)))\n      .catch(error => {\n        if (error === 401) {\n          dispatch(logout());\n\n          return;\n        }\n\n        dispatch(getUserFailed(error));\n      });*/\n\n  }, [auth, dispatch]);\n\n  useEffect(() => {\n   /* const requestOptions = {\n      ...getCategories.options,\n      headers: { 'Authorization': `Bearer ${auth.accessToken}` }\n    }\n\n    dispatch(getCategoriesRequest());\n\n    request(getCategories.url, requestOptions)\n      .then(data => dispatch(getCategoriesSuccess(data)))\n      .catch(error => {\n        if (error === 401) {\n          dispatch(logout());\n\n          return;\n        }\n\n        dispatch(getCategoriesFailed(error))\n      });\n*/\n  }, [auth, dispatch]);\n\n  return (\n    <Dashboard>\n      <Topbar />\n\n      <Switch>\n        \n      </Switch>\n    </Dashboard>\n  );\n}\n\nexport default DashboardRoute;"]},"metadata":{},"sourceType":"module"}